# Main program
hilgendorf_demos:
  auto_run: true # do not wait to move interactive markers
  planning_runs: 1
  experience_planner: bolt
  sparse_delta: 1.0
  save_database: false
  skip_solving: false  # just load/generate database
  planning_group_name: right_arm
  visualize:
    display_database: false
    astar: false # show node expansions and openings
    astar_speed: 0.05 # how many seconds to wait between each vertex
    start_goal_states: false
    raw_trajectory: false
    interpolated_trajectory: true
    grid_generation: false
    time_between_plans: 1
    cart_path: false
    cart_neighbors: false
  debug:
    print_trajectory: false

# Interface for publishing joint/cartesian commands to the low level controllers
execution_interface:
  command_mode: joint_publisher # method for publishing commands from this node to low level controller
  cartesian_command_topic: /hilgendorf/cartesian_controller/cartesian_command # command output from this node
  joint_trajectory_topic: /hilgendorf/cartesian_controller/command # command output from this node
  save_traj_to_file: false # debug mode for creating a CSV for use with Matlab
  save_traj_to_file_path: /home/dave/ros/current/ws_swri/src/trajectory_data/ # debug
  visualize_trajectory_line: false # show in RViz a series of markers visualizing path
  visualize_trajectory_path: false # show in RViz the robot moving on the trajectory path
  check_for_waypoint_jumps: false # ensure that any trajectory that is published does not have huge discontinuties in joint space

# MoveIt Boilerplate Base Functionality
moveit_base:
  joint_state_topic: /hilgendorf/joint_states # location to recieve updates of the robot's pose
  joint_model_group: whole_body # the main planning group to control
  planning_scene_topic: /swri/planning_scene  # topic for communicating the collision obj in the env with other nodes
  rviz:
    markers_topic: /hilgendorf/markers
    robot_state_topic: /hilgendorf/robot_state
    trajectory_topic: /hilgendorf/display_trajectory